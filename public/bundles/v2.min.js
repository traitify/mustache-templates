var ApiClient,SimplePromise,Traitify,console;Array.prototype.map||(Array.prototype.map=function(e,n){var t,i,s,r,o,a,l;if(s=void 0,t=void 0,r=void 0,"undefined"==typeof this||null===this)throw new TypeError(" this is null or not defined");if(i=Object(this),a=i.length>>>0,"function"!=typeof e)throw new TypeError(e+" is not a function");for(n&&(s=n),t=new Array(a),r=0;a>r;)o=void 0,l=void 0,r in i&&(o=i[r],l=e.call(s,o,r,i),t[r]=l),r++;return t}),Array.prototype.filter||(Array.prototype.filter=function(e){"use strict";var n,t,i,s,r,o;if(void 0===this||null===this)throw new TypeError;if(s=Object(this),t=s.length>>>0,"function"!=typeof e)throw new TypeError;for(i=[],r=arguments[1],n=0;t>n;)n in s&&(o=s[n],e.call(r,o,n,s)&&i.push(o)),n++;return i}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){var n,t;for(t=this.length>>>0,n=Number(arguments[1])||0,n=0>n?Math.ceil(n):Math.floor(n),0>n&&(n+=t);t>n;){if(n in this&&this[n]===e)return n;n++}return-1}),console||(console={log:function(){}}),Object.keys||(Object.keys=function(){"use strict";var e,n,t,i;return i=Object.prototype.hasOwnProperty,t=!{toString:null}.propertyIsEnumerable("toString"),e=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],n=e.length,function(s){var r,o,a;if("object"!=typeof s&&("function"!=typeof s||null===s))throw new TypeError("Object.keys called on non-object");a=[],o=void 0,r=void 0;for(o in s)i.call(s,o)&&a.push(o);if(t)for(r=0;n>r;)i.call(s,e[r])&&a.push(e[r]),r++;return a}}()),SimplePromise=function(e){var n;return n=Object(),n.then=function(e){return n.thenCallback=e,n.resolved&&n.thenCallback(n.data),n},n.resolved=!1,n.resolve=function(e){return n.data=e,n.thenCallback?n.thenCallback(e):n.resolved=!0,n},n["catch"]=function(e){return n.rejected?e(n.error):n.rejectCallback=e,n},n.rejected=!1,n.reject=function(e){return n.error=e,n.rejectCallback?n.rejectCallback(e):n.rejected=!0,n},e(n.resolve,n.reject),n},ApiClient=function(){function e(){this.host="https://api.traitify.com",this.version="v1",this.oldIE="undefined"!=typeof XDomainRequest?!0:!1,this.beautify=!1,this.XHR=XMLHttpRequest}return e.prototype.online=function(){return navigator.onLine},e.prototype.setBeautify=function(e){return this.beautify=e,this},e.prototype.setHost=function(e){return e.match(/http/)||(e="https://"+e),this.oldIE&&(e=e.replace("https://","").replace("http://",""),e=location.protocol+"//"+e),this.host=e,this},e.prototype.setPublicKey=function(e){return this.publicKey=e,this},e.prototype.setVersion=function(e){return this.version=e,this},e.prototype.ajax=function(e,n,t,i){var s,r,o,a,l,d,c,f;if(s=this.beautify,c=this.host+"/"+this.version+n,f=new this.XHR,"withCredentials"in f&&!this.oldIE)f.open(e,c,!0);else{if("undefined"==typeof XDomainRequest)return new SimplePromise(function(e,n){return n("CORS is Not Supported By This Browser")});this.oldIE&&(d=(new Date).getTime(),c+=-1===c.indexOf("?")?"?authorization="+this.publicKey+"&reset_cache="+d:"&authorization="+this.publicKey+"&reset_cache="+d),f=new XDomainRequest,f.open(e,c)}return f&&!this.oldIE&&(f.setRequestHeader("Authorization","Basic "+btoa(this.publicKey+":x")),f.setRequestHeader("Content-type","application/json"),f.setRequestHeader("Accept","application/json")),l=this,o=this.online(),r=this.oldIE,a=new SimplePromise(function(e,n){var a;if(l.reject=n,!o)return l.reject();try{return f.onload=function(){var n;return 404===f.status?l.reject(f.response):(n=r?f.responseText:f.response,s&&(n=n.replace(/_([a-z])/g,function(e,n){return n.toUpperCase()}).replace(/_/g,"")),n=JSON.parse(n),t&&t(n),l.resolve=e,l.resolve(n))},f.onprogress=function(){},f.ontimeout=function(){},f.onerror=function(){},window.setTimeout(function(){var e;try{return f.send(JSON.stringify(i))}catch(n){return e=n,l.reject(e)}},0),f}catch(d){return a=d,l.reject(a)}})},e.prototype.put=function(e,n,t){return this.oldIE?this.ajax("POST",e,t,n):this.ajax("PUT",e,t,n)},e.prototype.get=function(e,n){return this.ajax("GET",e,n,"")},e.prototype.getDecks=function(e){return this.get("/decks",e)},e.prototype.getSlides=function(e,n){return this.get("/assessments/"+e+"/slides",n)},e.prototype.addSlide=function(e,n,t,i,s){return this.put("/assessments/"+e+"/slides/"+n,{response:t,time_taken:i},s)},e.prototype.addSlides=function(e,n,t){return this.put("/assessments/"+e+"/slides",n,t)},e.prototype.getPersonalityTypes=function(e,n,t){var i,s,r,o,a;for(null==n&&(n=Object()),null==n.image_pack&&(n.image_pack="linear"),o=Array(),a=Object.keys(n),i=0,r=a.length;r>i;i++)s=a[i],o.push(s+"="+n[s]);return this.get("/assessments/"+e+"/personality_types?"+o.join("&"),t)},e.prototype.getPersonalityTraits=function(e,n,t){return this.get("/assessments/"+e+"/personality_traits/raw",t)},e.prototype.getCareers=function(e,n,t){var i,s,r,o,a;for(null==n&&(n=Object()),null==n.number_of_matches&&(n.number_of_matches=8),o=Array(),a=Object.keys(n),i=0,r=a.length;r>i;i++)s=a[i],o.push(s+"="+n[s]);return this.get("/assessments/"+e+"/matches/careers?"+o.join("&"),t)},e}(),Traitify=new ApiClient,Traitify.host="https://api-sandbox.traitify.com",Traitify.setProduction=function(e){return e?this.host="https://api.traitify.com":"https://api-sandbox.traitify.com"},Traitify.version="v1",function(e,n){"object"==typeof exports&&exports&&"string"!=typeof exports.nodeName?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):(e.Mustache={},n(Mustache))}(this,function(e){function n(e){return"function"==typeof e}function t(e){return g(e)?"array":typeof e}function i(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}function s(e,n){return null!=e&&"object"==typeof e&&n in e}function r(e,n){return m.call(e,n)}function o(e){return!r(y,e)}function a(e){return String(e).replace(/[&<>"'\/]/g,function(e){return v[e]})}function l(n,t){function s(){if(y&&!v)for(;m.length;)delete p[m.pop()];else m=[];y=!1,v=!1}function r(e){if("string"==typeof e&&(e=e.split(k,2)),!g(e)||2!==e.length)throw new Error("Invalid tags: "+e);a=new RegExp(i(e[0])+"\\s*"),l=new RegExp("\\s*"+i(e[1])),u=new RegExp("\\s*"+i("}"+e[1]))}if(!n)return[];var a,l,u,h=[],p=[],m=[],y=!1,v=!1;r(t||e.tags);for(var T,j,O,I,N,E,R=new f(n);!R.eos();){if(T=R.pos,O=R.scanUntil(a))for(var C=0,D=O.length;D>C;++C)I=O.charAt(C),o(I)?m.push(p.length):v=!0,p.push(["text",I,T,T+1]),T+=1,"\n"===I&&s();if(!R.scan(a))break;if(y=!0,j=R.scan(S)||"name",R.scan(b),"="===j?(O=R.scanUntil(w),R.scan(w),R.scanUntil(l)):"{"===j?(O=R.scanUntil(u),R.scan(x),R.scanUntil(l),j="&"):O=R.scanUntil(l),!R.scan(l))throw new Error("Unclosed tag at "+R.pos);if(N=[j,O,T,R.pos],p.push(N),"#"===j||"^"===j)h.push(N);else if("/"===j){if(E=h.pop(),!E)throw new Error('Unopened section "'+O+'" at '+T);if(E[1]!==O)throw new Error('Unclosed section "'+E[1]+'" at '+T)}else"name"===j||"{"===j||"&"===j?v=!0:"="===j&&r(O)}if(E=h.pop())throw new Error('Unclosed section "'+E[1]+'" at '+R.pos);return c(d(p))}function d(e){for(var n,t,i=[],s=0,r=e.length;r>s;++s)n=e[s],n&&("text"===n[0]&&t&&"text"===t[0]?(t[1]+=n[1],t[3]=n[3]):(i.push(n),t=n));return i}function c(e){for(var n,t,i=[],s=i,r=[],o=0,a=e.length;a>o;++o)switch(n=e[o],n[0]){case"#":case"^":s.push(n),r.push(n),s=n[4]=[];break;case"/":t=r.pop(),t[5]=n[2],s=r.length>0?r[r.length-1][4]:i;break;default:s.push(n)}return i}function f(e){this.string=e,this.tail=e,this.pos=0}function u(e,n){this.view=e,this.cache={".":this.view},this.parent=n}function h(){this.cache={}}var p=Object.prototype.toString,g=Array.isArray||function(e){return"[object Array]"===p.call(e)},m=RegExp.prototype.test,y=/\S/,v={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"},b=/\s*/,k=/\s+/,w=/\s*=/,x=/\s*\}/,S=/#|\^|\/|>|\{|&|=|!/;f.prototype.eos=function(){return""===this.tail},f.prototype.scan=function(e){var n=this.tail.match(e);if(!n||0!==n.index)return"";var t=n[0];return this.tail=this.tail.substring(t.length),this.pos+=t.length,t},f.prototype.scanUntil=function(e){var n,t=this.tail.search(e);switch(t){case-1:n=this.tail,this.tail="";break;case 0:n="";break;default:n=this.tail.substring(0,t),this.tail=this.tail.substring(t)}return this.pos+=n.length,n},u.prototype.push=function(e){return new u(e,this)},u.prototype.lookup=function(e){var t,i=this.cache;if(i.hasOwnProperty(e))t=i[e];else{for(var r,o,a=this,l=!1;a;){if(e.indexOf(".")>0)for(t=a.view,r=e.split("."),o=0;null!=t&&o<r.length;)o===r.length-1&&(l=s(t,r[o])),t=t[r[o++]];else t=a.view[e],l=s(a.view,e);if(l)break;a=a.parent}i[e]=t}return n(t)&&(t=t.call(this.view)),t},h.prototype.clearCache=function(){this.cache={}},h.prototype.parse=function(e,n){var t=this.cache,i=t[e];return null==i&&(i=t[e]=l(e,n)),i},h.prototype.render=function(e,n,t){var i=this.parse(e),s=n instanceof u?n:new u(n);return this.renderTokens(i,s,t,e)},h.prototype.renderTokens=function(e,n,t,i){for(var s,r,o,a="",l=0,d=e.length;d>l;++l)o=void 0,s=e[l],r=s[0],"#"===r?o=this.renderSection(s,n,t,i):"^"===r?o=this.renderInverted(s,n,t,i):">"===r?o=this.renderPartial(s,n,t,i):"&"===r?o=this.unescapedValue(s,n):"name"===r?o=this.escapedValue(s,n):"text"===r&&(o=this.rawValue(s)),void 0!==o&&(a+=o);return a},h.prototype.renderSection=function(e,t,i,s){function r(e){return o.render(e,t,i)}var o=this,a="",l=t.lookup(e[1]);if(l){if(g(l))for(var d=0,c=l.length;c>d;++d)a+=this.renderTokens(e[4],t.push(l[d]),i,s);else if("object"==typeof l||"string"==typeof l||"number"==typeof l)a+=this.renderTokens(e[4],t.push(l),i,s);else if(n(l)){if("string"!=typeof s)throw new Error("Cannot use higher-order sections without the original template");l=l.call(t.view,s.slice(e[3],e[5]),r),null!=l&&(a+=l)}else a+=this.renderTokens(e[4],t,i,s);return a}},h.prototype.renderInverted=function(e,n,t,i){var s=n.lookup(e[1]);return!s||g(s)&&0===s.length?this.renderTokens(e[4],n,t,i):void 0},h.prototype.renderPartial=function(e,t,i){if(i){var s=n(i)?i(e[1]):i[e[1]];return null!=s?this.renderTokens(this.parse(s),t,i,s):void 0}},h.prototype.unescapedValue=function(e,n){var t=n.lookup(e[1]);return null!=t?t:void 0},h.prototype.escapedValue=function(n,t){var i=t.lookup(n[1]);return null!=i?e.escape(i):void 0},h.prototype.rawValue=function(e){return e[1]},e.name="mustache.js",e.version="2.1.3",e.tags=["{{","}}"];var T=new h;e.clearCache=function(){return T.clearCache()},e.parse=function(e,n){return T.parse(e,n)},e.render=function(e,n,i){if("string"!=typeof e)throw new TypeError('Invalid template! Template should be a "string" but "'+t(e)+'" was given as the first argument for mustache#render(template, view, partials)');return T.render(e,n,i)},e.to_html=function(t,i,s,r){var o=e.render(t,i,s);return n(r)?void r(o):o},e.escape=a,e.Scanner=f,e.Context=u,e.Writer=h}),Traitify.ui={deviceType:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?"Phone":"desktop",widgets:Object(),widget:function(e,n){return this.widgets[e]=n},init:function(e){var n,t;return null==e&&(e=Object()),Traitify.ui.observable(e),null==e.slideDeck&&(e.slideDeck=Object()),null==(n=e.slideDeck).target&&(n.target=".tf-slide-deck"),null==(t=e.slideDeck).tag&&(t.tag="tf-slide-deck"),null==e.results&&(e.results=Object()),e.publicKey&&Traitify.setPublicKey(e.publicKey),delete e.publicKey,e.render=function(){var n,t,i,s,r,o,a;for(a=this,r="slides,blend,types,traits,career_matches",n="image_pack=linear&data="+r,s=e.slideDeck,t=0,i=s.length;i>t;t++)o=s[t],o.assessmentId=e.assessmentId;return Traitify.get("/assessments/"+e.assessmentId+"?"+n).then(function(n){var t,i,s,r,o,l,d,c,f,u,h,p,g,m,y,v,b;if(void 0===n.completed_at){for(e.slideDeck.mount=document.querySelector(e.slideDeck.target),b=Traitify.ui.widgets[e.slideDeck.tag],i=Object(),h=Object.keys(n),r=0,d=h.length;d>r;r++)t=h[r],-1!==b.data.indexOf(t)&&(i[t]=n[t]);for(v=Mustache.render(b.template,n),e.slideDeck.mount.innerHTML=v,p=b.scripts,o=0,c=p.length;c>o;o++)s=p[o],y=document.createElement("script"),y.innerHTML=s,e.slideDeck.mount.appendChild(y);return e.slideDeck.mount.traitify.data=i,e.slideDeck.mount.traitify.assessmentId=n.id,e.slideDeck.mount.traitify.initialize(),e.slideDeck.mount.traitify.mount=e.slideDeck.mount,e.slideDeck.mount.traitify.on("finish",function(){return a.render()})}for(g=Object.keys(n),m=[],l=0,f=g.length;f>l;l++)u=g[l],b=Traitify.ui.widgets[u],console.log("widget"),console.log(Traitify.ui.widgets),m.push(console.log("/widget"));return m}),this},e},observable:function(e){return e.observable={events:Object()},e.on=function(n,t){return null==e.observable.events[n]?e.observable.events[n]=[t]:e.observable.events[n].push(t)},e.trigger=function(n,t){var i,s,r,o,a;for(o=e.observable.events[n],a=[],i=0,s=o.length;s>i;i++)r=o[i],a.push(r(t));return a},e}},Traitify.ui.widget("tf-slide-deck",{data:["slides"],template:'<div class="tf-slides">\n  <div class="tf-slides-container">\n    <div class="tf-progress-bar">\n      <div class="tf-progress-bar-inner"></div>\n    </div>\n    <div class="tf-caption">\n    </div>\n    <div class="tf-slide tf-current">\n    </div>\n    <div class="tf-slide tf-next">\n    </div>\n  </div>\n  <div class="tf-me-not-me-container">\n    <div class="tf-me">Me</div>\n    <div class="tf-not-me">Not Me</div>\n    <div class="tf-loading tf-hidden">\n      <span class="tf-loading-content">Loading...</span>\n      <span class="tf-click-content tf-hidden">Click to reload!</span>\n    </div>\n  </div>\n</div>\n<style>\n  .tf-slides{\n    font-family: arial;\n    text-align:center;\n  }\n  .tf-progress-bar{\n    position: relative;\n    height: 12px;\n    width: 100%;\n    z-index:1;\n    background-color: rgba(150, 150, 150, .5);\n  }\n  .tf-hidden{\n    display: none;\n  }\n  .tf-progress-bar .tf-progress-bar-inner{\n    height: 100%;\n    width: 0%;\n    background-color: #fff;\n    border-radius: 0px 8px 8px 0px;\n    -webkit-transition: width .6s ease-in-out;\n    -moz-transition: width .6s ease-in-out;\n    -o-transition: width .6s ease-in-out;\n    transition: width .6s ease-in-out;\n  }\n  .tf-caption{\n    position: absolute;\n    color: #fff;\n    width:100%;\n    background-color: rgba(0, 0, 0, .7);\n    height: 48px;\n    line-height: 48px;\n    font-size: 20px;\n    z-index:1;\n  }\n  .tf-slides .tf-slide{\n    width: 100%;\n    height: 100%;\n    background-size: cover;\n    display: inline-block;\n    left: 0%;\n    top: 0px;\n    position: absolute;\n  }\n  .tf-slides .tf-slide.tf-current{\n    left: 0%;\n    -webkit-transition: left .6s ease-in-out;\n    -moz-transition: left .6s ease-in-out;\n    -o-transition: left .6s ease-in-out;\n    transition: left .6s ease-in-out;\n  }\n  .tf-slides .tf-slide.tf-next{\n    left: 100%;\n  }\n  .tf-slides .tf-slides-container{\n    height: 400px;\n    width: 100%;\n    position: relative;\n    overflow: hidden;\n  }\n  .tf-slides.min-width-720 .tf-slides-container {\n    height: 540px;\n  }\n  .tf-slides.min-width-1200 .tf-slides-container {\n    height: 700px;\n  }\n\n  .tf-me-not-me-container{\n    width: 280px;\n    margin: 0px auto;\n    height: 43px;\n    border-radius: 23px;\n    line-height: 43px;\n    text-align: center;\n    position: relative;\n    z-index: 1;\n    margin-top: -80px;\n    overflow: hidden;\n    cursor: pointer;\n  }\n  .tf-me, .tf-not-me{\n    font-size: 20px;\n    height: 100%;\n    display: inline-block;\n    position: relative;\n    width: 50%;\n    float: left;\n    color: #fff;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  .tf-me{\n    background-color: #00aeef;\n  }\n  .tf-me:active{\n    background-color: #0B659A;\n  }\n  .tf-not-me{\n    background-color: #ff5e5e;\n  }\n  .tf-not-me:active{\n    background-color: #961111;\n  }\n  .tf-slides.tf-loading .tf-loading{\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: #ff5e5e;\n    color: #fff;\n  }\n  .tf-slides.tf-loading .tf-loading .tf-loading-content{\n    -webkit-animation: fade-in-and-out 2s ease-out;\n    -webkit-animation-iteration-count: infinite; \n  }\n  @-webkit-keyframes fade-in-and-out {\n    0% { opacity: 0.0;}\n    50% { opacity: 1.0;}\n    100% { opacity: 0.0;}\n  }\n</style>\n',scripts:['\n    (function(me){\n      me.traitify = Object()\n\n      me.traitify.deferred = function(){\n        return {\n          thenCalls: Array(),\n          catchCalls: Array(),\n          then: function(callback){\n            if(this.triggered){\n              callback(this.args);\n            }else{\n              this.thenCalls.push(callback);\n            }\n          },\n          catch: function(callback){\n            if(this.triggered){\n              callback(this.args);\n            }else{\n              this.catchCalls.push(callback);\n            }\n          },\n          resolve: function(args){\n            if(this.thenCalls && this.thenCalls.length != 0){\n              for(i=0; i < this.thenCalls.length; i++){\n                this.thenCalls[i](args);\n              }\n            }else{\n              this.args = args;\n              this.triggered = true;\n            }\n          },\n          reject: function(args){\n            if(this.catchCalls.length != 0){\n              for(i=0; i < this.catchCalls.length; i++){\n                this.catchCalls[i](args);\n              }\n            }else{\n              this.args = args;\n              this.triggered = true;\n            }\n          }\n        }\n      }\n      me.traitify.Observable = function(item){\n        item.ons = Object()\n        item.on = function(key, callback){\n          if(!item.ons[key]){\n            item.ons[key] = Array();\n          }\n          item.ons[key].push(callback);\n        }\n        item.trigger = function(key, opts){\n          if(item.ons[key] && typeof item.ons[key].length != 0){\n            il = item.ons[key].length\n            for(i=0; i < il; i++){\n              item.ons[key][i](opts); \n            }\n          }\n        }\n        item.off = function(key){\n          item.ons[key] = Array();\n        }\n      }\n      me.traitify.Observable(me.traitify);\n      var i, undefined, el = document.createElement(\'div\'),\n      transitions = {\n        \'transition\':\'transitionend\',\n        \'OTransition\':\'otransitionend\',  // oTransitionEnd in very old Opera\n        \'MozTransition\':\'transitionend\',\n        \'WebkitTransition\':\'webkitTransitionEnd\'\n      };\n\n      for (i in transitions) {\n        if (transitions.hasOwnProperty(i) && el.style[i] !== undefined) {\n            transitionEnd = transitions[i];\n        }\n      }\n      var $TF = function(item){\n        if(typeof item == "string"){\n          item = me.querySelector(item);\n        }\n        if(Traitify.oldIE){\n          item.addEventListener = item.attachEvent;\n        }\n        item.hide = function(){\n          if(!this.className.match(/tf-hidden/)){\n            this.className = this.className + " tf-hidden";\n          }\n        }\n        item.show = function(){\n          this.className = this.className.replace(/ tf-hidden/, "");\n        }\n        return item;\n      }\n      me.traitify.slideResponses = Object();\n      me.traitify.lastResponse = new Date();\n      me.traitify.db = Object();\n      me.traitify.db.set = function(key, value){\n        key = me.traitify.assessmentId + "-" + key\n        return sessionStorage.setItem(key, JSON.stringify(value));\n      }\n      me.traitify.db.get = function(key){\n        key = me.traitify.assessmentId + "-" + key\n        return JSON.parse(sessionStorage.getItem(key));\n      }\n      me.traitify.initialize = function(){\n        self = $TF(this);\n        /*\n         * Set Available Nodes\n         */\n        this.nodes = Object()\n        this.nodes.currentSlide = $TF(".tf-slide.tf-current");\n        this.nodes.nextSlide = $TF(".tf-slide.tf-next");\n        this.nodes.caption = $TF(".tf-caption");\n        this.nodes.me = $TF(".tf-me");\n        this.nodes.notMe = $TF(".tf-not-me");\n        this.nodes.progressBarInner = $TF(".tf-progress-bar-inner");\n        this.nodes.slides = $TF(".tf-slides");\n        this.nodes.loading = $TF(".tf-loading .tf-loading-content");\n        this.nodes.clickToReload = $TF(".tf-loading .tf-click-content");\n\n\n        /*\n         * Set Data\n         */\n        this.data.unPlayedSlides = this.data.slides.filter(function(slide){\n          return !slide.completed_at && Object.keys(self.db.get("slideResponses") || Object()).indexOf(slide.id) == -1\n        })\n        this.data.playedSlides = this.data.slides.filter(function(slide){\n          return slide.completed_at || Object.keys(self.db.get("slideResponses") || Object()).indexOf(slide.id) != -1\n        })\n        this.data.slides = this.data.playedSlides.concat(this.data.unPlayedSlides)\n        this.index = this.data.playedSlides.length || 0\n\n        /*\n         * Resize\n         */\n        self.resizeTimer =  false;\n        window.addEventListener("resize", function(){\n          if(self.resizeTimeout){\n            clearTimeout(self.resizeTimeout);\n          }\n\n          self.resizeTimeout = setTimeout(function(){\n            self.trigger("resize");\n            self.resizeTimeout = false;\n          }, 300);\n        });\n\n        self.on("resize", function(){\n          width = me.offsetWidth;\n          className = self.nodes.slides.className;\n          className = className.replace(/ min-width-1200/g, "");\n          className = className.replace(/ min-width-720/g, "");\n          className = className.replace(/ min-width-480/g, "");\n \n          if(width > 1200){\n            className += " min-width-1200";\n          } else if (width > 720){\n            className += " min-width-720";\n          } else{\n            className += " min-width-480";\n          }\n          self.nodes.slides.className = className;\n        })\n        self.trigger("resize");\n\n        /*\n         * Transition\n         */\n        this.slideLock = false;\n        this.events = Object();\n        self.nodes.nextSlide.transitionend = function(){\n\n        }\n        self.nodes.nextSlide.addEventListener(transitionEnd, function(){\n          self.nodes.nextSlide.transitionend();\n        })\n\n        this.events.animate = function(){\n          if(!self.slideLock){\n            promise = self.deferred();\n            self.slideLock = true;\n            self.nodes.nextSlide.transitionend = function(){\n              self.slideLock = false;\n              promise.resolve();\n            }\n            self.nodes.nextSlide.className = self.nodes.nextSlide.className.replace("tf-next", "") + " tf-current";\n            self.nodes.progressBarInner.style.width = Math.round((self.index / self.data.slides.length) * 100) + "%";\n            return promise;\n          }\n        }\n        self.nodes.progressBarInner.style.width = Math.round((self.index / self.data.slides.length) * 100) + "%";\n\n        /*\n         * Set Current Slide\n         */\n        this.events.setCurrentSlideData = function(){\n          if( self.data.slides.length - self.index == 0){\n            return true;\n          }\n\n          self.currentSlide = self.data.slides[self.index];\n          /*\n           * Set Caption\n           */\n          self.nodes.caption.innerHTML = self.currentSlide.caption;\n            \n          /*\n           * Set Image\n           */\n          self.nodes.currentSlide.style.backgroundImage = "url(" + self.currentSlide.image_desktop_retina + ")";\n\n          /*\n           * Set Focus\n           */\n          backgroundPosition = self.currentSlide.focus_x + "% " + self.currentSlide.focus_y + "%";\n          self.nodes.currentSlide.style.backgroundPosition = backgroundPosition;            \n        }\n\n        /*\n         * Set Next Slide\n         */\n        this.events.setNextSlideData = function(){\n          if( self.data.slides.length - self.index <= 1){\n            return true;\n          }\n\n          self.nextSlide = self.data.slides[self.index + 1];\n          /*\n           * Set Image\n           */\n          self.nodes.nextSlide.style.backgroundImage = "url(" + self.nextSlide.image_desktop_retina + ")";\n\n          /*\n           * Set Focus\n           */\n          backgroundPosition = self.nextSlide.focus_x + "% " + self.nextSlide.focus_y + "%";\n          self.nodes.nextSlide.style.backgroundPosition = backgroundPosition;\n        }\n\n        this.events.setNextSlideData();\n        this.events.setCurrentSlideData();\n\n        /*\n         * Advance Slide\n         */\n        this.events.advanceSlide = function(){\n          if(!self.slideLock){\n            if(((self.index - self.data.slides.length) <= 2 && self.index - self.data.slides.length != 0 ) || self.images[self.index + 2]){\n              self.index++\n              self.trigger("advanceSlide", {value: true, slide: slide});\n\n              self.events.animate().then(function(){\n                self.events.setNextSlideData();\n                self.nodes.nextSlide.className = self.nodes.nextSlide.className.replace("tf-current", "") + " tf-next";\n                self.events.setCurrentSlideData();\n              })\n            } else if(!self.nodes.slides.className.match(/tf-loading/)) {\n              self.nodes.slides.className += " tf-loading";\n            } \n          }\n        }\n        this.on("advanceSlide", function(params){\n          slideResponses = self.db.get("slideResponses") || Object();\n\n          slideResponses[params.slide.id] = {\n            value: params.value,\n            responseTime: new Date() - self.lastResponse\n          };\n\n          self.lastResponse = new Date();\n          self.db.set("slideResponses", slideResponses);\n          self.trigger("setSlides");\n        })\n\n        this.on("setSlides", function(){\n          slideResponses = self.db.get("slideResponses") || Object();\n\n          srl = Object.keys(slideResponses).length;\n\n          if(srl == self.data.slides.length){\n            slides = Object.keys(slideResponses).map(function(slideId){\n              return {\n                id: slideId,\n                response: slideResponses[slideId].value,\n                time_taken: slideResponses[slideId].responseTime\n              };\n            })\n            \n            Traitify.addSlides(self.assessmentId, slides).then(function(){\n              me.innerHTML = "";\n\n              self.trigger("finish")\n            });\n          }\n        })\n\n        this.trigger("setSlides");\n\n        /*\n         * Me Trigger\n         */\n        this.on("me", function(){\n          slide = self.data.slides[self.index]\n\n          self.events.advanceSlide();\n        })\n\n        /*\n         * Not Me Trigger\n         */\n        this.on("notMe",function(){\n          slide = self.data.slides[self.index]\n\n          self.events.advanceSlide();\n        })\n\n        /*\n         * Me\n         */\n        this.nodes.me.onclick = function(){ \n          self.trigger("me")\n        }\n\n        /*\n         * Not Me\n         */\n        this.nodes.notMe.onclick = function(){\n          self.trigger("notMe")\n        }\n\n        /*\n         * Gui For Preload Images\n         */\n        self.imageSize = "image_desktop_retina"\n        this.imageUrls = self.data.slides.map(function(slide){\n          return slide[self.imageSize];\n        })\n\n        this.nodes.clickToReload.onclick = function(){\n          self.trigger("clickReload");\n        }\n        this.on("clickReload", function(){\n          self.imageTries[self.images.lastIndex] = 0;\n          self.nodes.loading.show();\n          self.nodes.clickToReload.hide();\n          self.loadImage(self.images.lastIndex);\n        })\n\n        /*\n         * NASTY IMAGE PRELOADING\n         */\n        this.imageTries = Object()\n        this.images = Array();\n        self.images.lastIndex = this.index;\n\n        this.loadImage = function(i){\n          if(self.imageUrls[i]){\n            if(!self.imageTries[i]){\n              self.imageTries[i]= 0;\n            }\n            self.images[i] = new Image();\n            self.images[i].src = self.imageUrls[i];\n            self.images[i].onerror = function(){\n              self.imageTries[i]++;\n              if(self.imageTries[i] < 30){\n                setTimeout(function(){\n                  self.loadImage(i);\n                }, 1000)\n              }else{\n                self.images.lastIndex = i;\n                self.nodes.loading.hide();\n                self.nodes.clickToReload.show();\n              }\n            }\n            self.images[i].onload = function(){\n              setTimeout(function(){\n                self.loadImage(i + 1);\n              }, 300)\n              self.trigger("imageLoaded");\n              self.nodes.clickToReload.hide();\n              self.images.lastIndex = i;\n\n              self.nodes.slides.className = self.nodes.slides.className.replace(" tf-loading", "");\n            }\n          }\n        }\n        this.loadImage(self.index);\n      }\n    })(document.currentScript.parentNode);\n']});