Traitify.ui.widget("personalityBlend", {"name":"personalityBlend","data":["personality_blend"],"template":"<div class=\"tf-personality-blend\">\n  <div class=\"tf-personality-blend-container\">\n    <div class=\"tf-badges\">\n      <div class=\"tf-badge tf-left\" style=\"border-color:#{{personality_blend.personality_type_1.badge.color_1}}\">\n        <img src=\"{{personality_blend.personality_type_1.badge.image_large}}\"  />\n      </div>\n      <div class=\"tf-badge tf-right\" style=\"border-color:#{{personality_blend.personality_type_2.badge.color_1}}\">\n        <img src=\"{{personality_blend.personality_type_2.badge.image_large}}\" />\n      </div>\n    </div>\n    <div class=\"tf-name\">\n      {{personality_blend.name}}\n    </div> \n    <div class=\"tf-description\">\n      {{personality_blend.description}}\n    </div>\n  </div>\n</div>\n<style>\n  @font-face {\n    font-family: \"Source Sans Pro\";\n    font-style: normal;\n    font-weight: 400;\n    src: local('Source Sans Pro'), local('Source Sans Pro'), url(\"https://s3.amazonaws.com/traitify-cdn/assets/fonts/source-sans-pro.woff\") format('woff');\n  }\n  .tf-personality-blend{\n    font-family: \"Source Sans Pro\", arial, verdana;\n    text-align: center;\n  }\n  .tf-personality-blend .tf-personality-blend .tf-badges{\n    padding: 0px 14px;\n  }\n  .tf-personality-blend .tf-personality-blend-container .tf-badge{\n    border-width: 2px;\n    border-style: solid;\n    display: inline-block;\n    border-radius: 50%;\n    padding: 30px;\n  }\n  .tf-personality-blend .tf-personality-blend-container .tf-badge.tf-right{\n    margin: 0px -14px;\n  }\n  .tf-personality-blend .tf-personality-blend-container .tf-badge.tf-left{\n    margin: 0px -14px;\n  }\n  .tf-personality-blend .tf-personality-blend-container .tf-badge img{\n    width: 70px;\n  }\n  .tf-personality-blend .tf-personality-blend-container .tf-name{\n    font-size:23px;\n    margin: 18px 0px;\n  }\n  .tf-personality-blend .tf-personality-blend-container .tf-description{\n    text-align:justify;\n    width:100%;\n    max-width: 800px;\n    margin:0px auto;\n  }\n</style>\n<!--[if lt IE 9]>\n  <style>\n    .tf-personality-blend .tf-personality-blend-container .tf-badge{\n      border: 0px;\n    }\n  </style>\n<![endif]-->\n","target":".tf-personality-blend","scripts":["\n  (function(){\n    this.traitify = Object();\n    var slideDeck = this;\n    var traitify = this.traitify;\n    var $ = function(item){\n      if(typeof item == \"string\"){\n        var items = slideDeck.querySelectorAll(item);\n      } else {\n        var items = item;\n      }\n      items.each = function(callback){\n        for(i=0; i < this.length; i++){\n          callback(i, this[i])\n        }\n      }\n      items.html = function(html){\n        if(html){\n          return this[0].innerHTML = html;\n        }else{\n          return this[0].innerHTML;\n        }\n      }\n      items.find = function(item){\n        return $(this[0].querySelectorAll(item))\n      }\n      items.click = function(callback){\n        this.each(function(i, item){\n          item.onclick = callback;\n        })\n      }\n      items.addClass = function(className){\n        items.each(function(i, item){\n          item.className = item.className.replace(className, \"\")\n          item.className += \" \" + className\n        })\n        return items;\n      }\n      items.removeClass = function(className){\n        items.each(function(i, item){\n          item.className = item.className.replace(\" \" + className, \"\").replace(className, \"\")\n        })\n        return items;\n      }\n      items.hide = function(){\n        items.addClass(\"tf-hidden\");\n      }\n      items.show = function(){\n        items.removeClass(\"tf-hidden\")\n      }\n      items.css = function(options){\n        items.each(function(i,item){\n          $(Object.keys(options)).each(function(i, optionKey){\n            item.style[optionKey] = options[optionKey];\n          })\n        })\n      }\n      return items;\n    }\n    $.db = {\n      get: function(key){\n        return JSON.parse(sessionStorage.getItem(key));\n      },\n      set: function(key, value){\n        return sessionStorage.setItem(key, JSON.stringify(value));\n      }\n    }\n\n    this.traitify.initialize = function(){\n      /**********************************\n       * PREPARE DATA\n       **********************************/\n      console.log(this.data)\n    }\n  }).call(document.currentScript.parentNode);\n"]})