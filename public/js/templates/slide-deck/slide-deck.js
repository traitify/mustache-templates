Traitify.ui.widget("slideDeck", {"name":"slideDeck","data":["slides"],"template":"<div class=\"tf-slides\">\n  <div class=\"tf-slides-container\">\n    <div class=\"tf-progress-bar\">\n      <div class=\"tf-progress-bar-inner\"></div>\n    </div>\n    <div class=\"tf-caption\">\n    </div>\n    <div class=\"tf-slide tf-current\">\n    </div>\n    <div class=\"tf-slide tf-next\">\n    </div>\n  </div>\n  <div class=\"tf-me-not-me-container\">\n    <div class=\"tf-me\">Me</div>\n    <div class=\"tf-not-me\">Not Me</div>\n    <div class=\"tf-loading tf-hidden\">\n      <span class=\"tf-loading-content\">Loading...</span>\n      <span class=\"tf-click-content tf-hidden\">Click to reload!</span>\n    </div>\n  </div>\n</div>\n<style>\n  @font-face {\n    font-family: \"Source Sans Pro\";\n    font-style: normal;\n    font-weight: 400;\n    src: local('Source Sans Pro'), local('Source Sans Pro'), url(\"https://s3.amazonaws.com/traitify-cdn/assets/fonts/source-sans-pro.woff\") format('woff');\n  }\n  .tf-slides{\n    font-family: arial;\n    text-align:center;\n  }\n  .tf-progress-bar{\n    position: relative;\n    height: 12px;\n    width: 100%;\n    z-index:1;\n    background-color: #aaa;\n    background-color: rgba(150, 150, 150, .5);\n  }\n  .tf-hidden{\n    display: none;\n  }\n  .tf-progress-bar .tf-progress-bar-inner{\n    height: 100%;\n    width: 0%;\n    background-color: #fff;\n    border-radius: 0px 8px 8px 0px;\n    -webkit-transition: width .8s ease-in-out;\n    -moz-transition: width .8s ease-in-out;\n    -o-transition: width .8s ease-in-out;\n    transition: width .8s ease-in-out;\n  }\n  .tf-caption{\n    position: absolute;\n    color: #fff;\n    width:100%;\n    background-color: #333;\n    background-color: rgba(0, 0, 0, .7);\n    height: 48px;\n    line-height: 48px;\n    font-size: 20px;\n    z-index:1;\n  }\n  .tf-slides .tf-slide{\n    width: 100%;\n    height: 100%;\n    background-size: cover;\n    display: inline-block;\n    left: 0%;\n    top: 0px;\n    position: absolute;\n  }\n  .tf-slides .tf-slide.tf-current{\n    left: 0%;\n    transform: scale(1,1);\n    zoom: 0.4\\9;\n    background-repeat: no-repeat;\n    -webkit-transition: left .6s ease;\n    -moz-transition: left .6s ease;\n    -o-transition: left .6s ease;\n    transition: left .6s ease;\n  }\n  .tf-slides .tf-slide.tf-next{\n    left: 100%;\n  }\n  .tf-slides .tf-slides-container{\n    height: 400px;\n    width: 100%;\n    position: relative;\n    overflow: hidden;\n  }\n  .tf-slides.min-width-720 .tf-slides-container {\n    height: 540px;\n  }\n  .tf-slides.min-width-720 .tf-slides-container .tf-slide.tf-current{\n    transform: scale(1,1);\n    zoom: 0.7\\9;\n  }\n  .tf-slides.min-width-1200 .tf-slides-container {\n    height: 700px;\n  }\n  .tf-slides.min-width-1200 .tf-slides-container .tf-slide.tf-current{\n    transform: scale(1,1);\n    zoom: 0.67\\9;\n  }\n\n  .tf-me-not-me-container{\n    width: 280px;\n    margin: 0px auto;\n    height: 43px;\n    border-radius: 23px;\n    line-height: 43px;\n    text-align: center;\n    position: relative;\n    z-index: 1;\n    margin-top: -80px;\n    overflow: hidden;\n    cursor: pointer;\n  }\n  .tf-me, .tf-not-me{\n    font-size: 20px;\n    height: 100%;\n    display: inline-block;\n    position: relative;\n    width: 50%;\n    float: left;\n    color: #fff;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  .tf-me{\n    background-color: #00aeef;\n  }\n  .tf-me:active{\n    background-color: #0B659A;\n  }\n  .tf-not-me{\n    background-color: #ff5e5e;\n  }\n  .tf-not-me:active{\n    background-color: #961111;\n  }\n  .tf-slides.tf-loading .tf-loading{\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: #ff5e5e;\n    color: #fff;\n  }\n  .tf-slides.tf-loading .tf-loading .tf-loading-content{\n    -webkit-animation: fade-in-and-out 2s ease-out;\n    -webkit-animation-iteration-count: infinite; \n  }\n  @-webkit-keyframes fade-in-and-out {\n    0% { opacity: 0.0;}\n    50% { opacity: 1.0;}\n    100% { opacity: 0.0;}\n  }\n</style>\n","target":".tf-slide-deck","scripts":["\n  (function(){\n    this.traitify = Object();\n    var slideDeck = this;\n    var traitify = this.traitify;\n    var $ = function(item){\n      if(typeof item == \"string\"){\n        var items = slideDeck.querySelectorAll(item);\n      } else {\n        var items = item;\n      }\n      items.each = function(callback){\n        for(i=0; i < this.length; i++){\n          callback(i, this[i])\n        }\n      }\n      items.html = function(html){\n        if(html){\n          return this[0].innerHTML = html;\n        }else{\n          return this[0].innerHTML;\n        }\n      }\n      items.find = function(item){\n        return $(this[0].querySelectorAll(item))\n      }\n      items.click = function(callback){\n        this.each(function(i, item){\n          item.onclick = callback;\n        })\n      }\n      items.addClass = function(className){\n        items.each(function(i, item){\n          item.className = item.className.replace(className, \"\")\n          item.className += \" \" + className\n        })\n        return items;\n      }\n      items.removeClass = function(className){\n        items.each(function(i, item){\n          item.className = item.className.replace(\" \" + className, \"\").replace(className, \"\")\n        })\n        return items;\n      }\n      items.hide = function(){\n        items.addClass(\"tf-hidden\");\n      }\n      items.show = function(){\n        items.removeClass(\"tf-hidden\")\n      }\n      items.css = function(options){\n        items.each(function(i,item){\n          $(Object.keys(options)).each(function(i, optionKey){\n            item.style[optionKey] = options[optionKey];\n          })\n        })\n      }\n      return items;\n    }\n    $.db = {\n      get: function(key){\n        return JSON.parse(sessionStorage.getItem(key));\n      },\n      set: function(key, value){\n        return sessionStorage.setItem(key, JSON.stringify(value));\n      }\n    }\n\n    this.traitify.initialize = function(){\n      /**********************************\n       * PREPARE DATA\n       **********************************/\n      this.nodes = Object();\n      this.nodes.slides = $(\".tf-slides\");\n      this.nodes.me = this.nodes.slides.find(\".tf-me\");\n      this.nodes.notMe = this.nodes.slides.find(\".tf-not-me\");\n      this.nodes.slidesContainer = this.nodes.slides.find(\".tf-slides-container\");\n      this.nodes.progressBar = this.nodes.slidesContainer.find(\".tf-progress-bar\");\n      this.nodes.progressBarInner = this.nodes.slidesContainer.find(\".tf-progress-bar-inner\");\n      this.nodes.currentSlide = $(\".tf-slide.tf-current\");\n      this.nodes.nextSlide = $(\".tf-slide.tf-next\");\n      this.nodes.caption = $(\".tf-caption\");\n      this.nodes.loading = $(\".tf-loading .tf-loading-content\");\n      this.nodes.clickToReload = $(\".tf-loading .tf-click-content\");\n\n      this.imageSize = \"image_desktop_retina\";\n\n      this.imageUrls = this.data.slides.map(function(slide){\n        return slide[traitify.imageSize];\n      })\n\n      traitify.slideLock = false;\n      this.db = Object();\n\n      this.db.set = function(key, data){\n        return $.db.set(traitify.assessmentId + key, data);\n      }\n\n      this.db.get = function(key){\n        return $.db.get(traitify.assessmentId + key);\n      }\n\n      traitify.data.slideResponses = traitify.db.get(\"slides\");\n\n      if(!traitify.data.slideResponses){\n        traitify.data.slideResponses = Object();\n      }\n\n      var slideIds = Object.keys(traitify.data.slideResponses)\n      var playedSlides = traitify.data.slides.filter(function(slide, i){\n        if(slideIds.indexOf(slide.id) != -1){\n          return true;\n        }else{\n          return false;\n        }\n      })\n      var unplayedSlides = traitify.data.slides.filter(function(slide, i){\n        if(slideIds.indexOf(slide.id) == -1){\n          return true;\n        }else{\n          return false;\n        }\n      })\n      this.data.slides = playedSlides.concat(unplayedSlides);\n\n      this.index = Object.keys(traitify.data.slideResponses).length ||  0;\n\n      this.lastClick = new Date();\n\n      /************************************\n       * HANDLE TRANSITION \n       ************************************/\n      var i, undefined, el = document.createElement('div'),\n      transitions = [\n        {key: 'transition', css: 'transitionend'},\n        {key: 'OTransition', css: 'otransitionend'},  // oTransitionEnd in very old Opera\n        {key: 'MozTransition', css: 'transitionend'},\n        {key: 'WebkitTransition', css: 'webkitTransitionEnd'}\n      ];\n      $(transitions).each(function(i, transition){\n        if (el.style[transition.key] !== undefined) {\n            traitify.transitionEnd = transition.css;\n        }\n      })\n\n      /*************************************\n       * RESIZE\n       *************************************/\n      this.resizeTimer = false;\n      var eventListener = function(item, eventListener, callback){\n        if(item.addEventListener){\n          item.addEventListener(eventListener, callback)\n        } else if (item.attachEvent){\n          item.attachEvent(\"on\" + eventListener, callback)\n        }\n      }\n\n      eventListener(window, \"resize\", function(){\n          if(traitify.resizeTimeout){\n            clearTimeout(traitify.resizeTimeout);\n          }\n          traitify.resizeTimeout = setTimeout(function(){\n            traitify.options.trigger(\"resize\");\n            traitify.resizeTimeout = false;\n          }, 100);\n      });\n\n      this.options.on(\"slideDeck.resize\", function(){\n        width = slideDeck.offsetWidth;\n        traitify.nodes.slides.removeClass(\"min-width-1200\");\n        traitify.nodes.slides.removeClass(\"min-width-720\");\n        traitify.nodes.slides.removeClass(\"min-width-480\");\n\n        if(width > 1200){\n          traitify.nodes.slides.addClass(\"min-width-1200\");\n        } else if (width > 720){\n          traitify.nodes.slides.addClass(\"min-width-720\");\n        } else{\n          traitify.nodes.slides.addClass(\"min-width-480\");\n        }\n      })\n      this.options.trigger(\"slideDeck.resize\");\n\n      this.options.on(\"slideDeck.transitionEnd\", function(){\n        traitify.options.trigger(\"slideDeck.setView\");\n        traitify.slideLock = false;\n      })\n\n      /************************************\n       * SET SLIDES\n       ************************************/\n      this.options.on(\"slideDeck.addSlides\", function(){\n        var slideResponses = traitify.data.slideResponses;\n        responses = Object.keys(slideResponses).map(function(slide){\n          return slideResponses[slide];\n        })\n        Traitify.addSlides(traitify.options.assessmentId, responses).then(function(){\n          traitify.options.trigger(\"slideDeck.finish\");\n        })\n      })\n      if(slideIds.length == this.data.slides.length){\n        this.options.trigger(\"slideDeck.addSlides\");\n        return true;\n      }\n      this.options.on(\"slideDeck.setProgressBar\", function(){\n        percent = Math.round(((traitify.index + 1) / traitify.data.slides.length) * 100);\n        traitify.nodes.progressBarInner.css({\n          width:  percent + \"%\"\n        });\n      })\n\n      this.options.trigger(\"slideDeck.setProgressBar\");\n       \n      /************************************\n       * SET VIEW\n       ************************************/\n      this.options.on(\"slideDeck.setView\", function(){\n        currentSlide = traitify.data.slides[traitify.index];\n        nextSlide = traitify.data.slides[traitify.index + 1];\n        traitify.nodes.caption.html(currentSlide.caption);\n        \n        traitify.nodes.currentSlide.css({\n          backgroundImage: \"url(\" + currentSlide[traitify.imageSize] + \")\",\n          backgroundPosition: currentSlide.focus_x + \"% \" + currentSlide.focus_y + \"%\",\n          \"background-position-x\": currentSlide.focus_x + \"%\",\n          \"background-position-y\": currentSlide.focus_y + \"%\"\n        });\n        if(nextSlide && nextSlide[traitify.imageSize]){\n          traitify.nodes.nextSlide.addClass(\"tf-next\").removeClass(\"tf-current\");\n          traitify.nodes.nextSlide.css({\n            backgroundImage: \"url(\" + nextSlide[traitify.imageSize] + \")\",\n            backgroundPosition: nextSlide.focus_x + \"% \" + nextSlide.focus_y + \"%\"\n          });\n        }\n      })\n\n      /************************************\n       * HANDLE ACTIONS\n       ************************************/\n      this.options.on(\"slideDeck.animate\", function(){\n        if(!traitify.slideLock){\n          traitify.slideLock = true;\n          traitify.index++;\n          traitify.options.trigger(\"slideDeck.setProgressBar\");\n\n          if(traitify.nodes.nextSlide){\n            traitify.nodes.nextSlide.removeClass(\"tf-next\").addClass(\"tf-current\");\n          }\n\n          if(!traitify.transitionEnd){\n            traitify.options.trigger(\"slideDeck.transitionEnd\")\n          }\n        }\n      })\n\n      this.options.on(\"slideDeck.notMe slideDeck.me\", function(data){\n        currentSlide = traitify.data.slides[traitify.index];\n        lastClick = traitify.lastClick;\n        traitify.lastClick = new Date();\n        traitify.data.slideResponses[currentSlide.id] = {\n          id: currentSlide.id,\n          response: data.value,\n          time_taken: traitify.lastClick - lastClick\n        }\n        traitify.db.set(\"slides\", traitify.data.slideResponses)\n\n        var slideIds = Object.keys(traitify.data.slideResponses)\n        if(slideIds.length == traitify.data.slides.length){\n          traitify.options.trigger(\"slideDeck.addSlides\");\n        }\n        traitify.options.trigger(\"slideDeck.animate\");\n      })\n\n\n      /*********************************\n       * HOOKS\n       *********************************/\n      this.nodes.me.click(function(){\n        traitify.options.trigger(\"slideDeck.me\", {value: true})\n      })\n\n      this.nodes.notMe.click(function(){\n        traitify.options.trigger(\"slideDeck.notMe\", {value: false})\n      })\n\n      this.nodes.clickToReload.click(function(){\n        traitify.options.trigger(\"slideDeck.clickReload\");\n      })\n\n      if(traitify.transitionEnd && window.addEventListener){\n        traitify.nodes.nextSlide[0].addEventListener( traitify.transitionEnd, function( event ) { \n          traitify.options.trigger(\"slideDeck.transitionEnd\") \n        }, false );\n      }\n\n      /********************************\n       * NASTY IMAGE PRELOADING\n       ********************************/\n      this.imageTries = Object()\n      this.images = Array();\n      this.images.lastIndex = this.index;\n      this.loadImage = function(i){\n        if(traitify.imageUrls[i]){\n          if(!traitify.imageTries[i]){\n            traitify.imageTries[i]= 0;\n          }\n          traitify.images[i] = new Image();\n          traitify.images[i].src = traitify.imageUrls[i];\n          traitify.images[i].onerror = function(){\n            traitify.imageTries[i]++;\n            if(traitify.imageTries[i] < 30){\n              setTimeout(function(){\n                traitify.loadImage(i);\n              }, 1000)\n            }else{\n              traitify.images.lastIndex = i;\n              traitify.nodes.loading.hide();\n              traitify.nodes.clickToReload.show();\n            }\n          }\n          traitify.images[i].onload = function(){\n            setTimeout(function(){\n              traitify.loadImage(i + 1);\n            }, 300)\n            traitify.options.trigger(\"slideDeck.imageLoaded\", this);\n            traitify.nodes.clickToReload.hide();\n            traitify.images.lastIndex = i;\n            traitify.nodes.slides.removeClass(\"tf-loading\");\n          }\n        }\n      }\n      \n      traitify.options.trigger(\"slideDeck.setView\");\n      this.loadImage(traitify.index);\n      \n    }\n  }).call(document.currentScript.parentNode);\n"]})