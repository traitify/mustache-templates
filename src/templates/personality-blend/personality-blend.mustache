<div class="tf-personality-blend">
  <div class="tf-personality-blend-container">
    <div class="tf-badges">
      <div class="tf-badge tf-left" style="border-color:#{{personality_blend.personality_type_1.badge.color_1}}">
        <img src="{{personality_blend.personality_type_1.badge.image_large}}"  />
      </div>
      <div class="tf-badge tf-right" style="border-color:#{{personality_blend.personality_type_2.badge.color_1}}">
        <img src="{{personality_blend.personality_type_2.badge.image_large}}" />
      </div>
    </div>
    <div class="tf-name">
      {{personality_blend.name}}
    </div> 
    <div class="tf-description">
      {{personality_blend.description}}
    </div>
  </div>
</div>
<style>
  @font-face {
    font-family: "Source Sans Pro";
    font-style: normal;
    font-weight: 400;
    src: local('Source Sans Pro'), local('Source Sans Pro'), url("https://s3.amazonaws.com/traitify-cdn/assets/fonts/source-sans-pro.woff") format('woff');
  }
  .tf-personality-blend{
    font-family: "Source Sans Pro", arial, verdana;
    text-align: center;
  }
  .tf-personality-blend .tf-personality-blend .tf-badges{
    padding: 0px 14px;
  }
  .tf-personality-blend .tf-personality-blend-container .tf-badge{
    border-width: 2px;
    border-style: solid;
    display: inline-block;
    border-radius: 50%;
    padding: 30px;
  }
  .tf-personality-blend .tf-personality-blend-container .tf-badge.tf-right{
    margin: 0px -14px;
  }
  .tf-personality-blend .tf-personality-blend-container .tf-badge.tf-left{
    margin: 0px -14px;
  }
  .tf-personality-blend .tf-personality-blend-container .tf-badge img{
    width: 70px;
  }
  .tf-personality-blend .tf-personality-blend-container .tf-name{
    font-size:23px;
    margin: 18px 0px;
  }
  .tf-personality-blend .tf-personality-blend-container .tf-description{
    text-align:justify;
    width:100%;
    max-width: 800px;
    margin:0px auto;
  }
</style>
<!--[if lt IE 9]>
  <style>
    .tf-personality-blend .tf-personality-blend-container .tf-badge{
      border: 0px;
    }
  </style>
<![endif]-->
<script>
  (function(){
    this.traitify = Object();
    var slideDeck = this;
    var traitify = this.traitify;
    var $ = function(item){
      if(typeof item == "string"){
        var items = slideDeck.querySelectorAll(item);
      } else {
        var items = item;
      }
      items.each = function(callback){
        for(i=0; i < this.length; i++){
          callback(i, this[i])
        }
      }
      items.html = function(html){
        if(html){
          return this[0].innerHTML = html;
        }else{
          return this[0].innerHTML;
        }
      }
      items.find = function(item){
        return $(this[0].querySelectorAll(item))
      }
      items.click = function(callback){
        this.each(function(i, item){
          item.onclick = callback;
        })
      }
      items.addClass = function(className){
        items.each(function(i, item){
          item.className = item.className.replace(className, "")
          item.className += " " + className
        })
        return items;
      }
      items.removeClass = function(className){
        items.each(function(i, item){
          item.className = item.className.replace(" " + className, "").replace(className, "")
        })
        return items;
      }
      items.hide = function(){
        items.addClass("tf-hidden");
      }
      items.show = function(){
        items.removeClass("tf-hidden")
      }
      items.css = function(options){
        items.each(function(i,item){
          $(Object.keys(options)).each(function(i, optionKey){
            item.style[optionKey] = options[optionKey];
          })
        })
      }
      return items;
    }
    $.db = {
      get: function(key){
        return JSON.parse(sessionStorage.getItem(key));
      },
      set: function(key, value){
        return sessionStorage.setItem(key, JSON.stringify(value));
      }
    }

    this.traitify.initialize = function(){
      /**********************************
       * PREPARE DATA
       **********************************/
      console.log(this.data)
    }
  }).call(document.currentScript.parentNode);
</script>